name: Release

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (e.g., 1.0.0)'
        required: true
        type: string
      prerelease:
        description: 'Pre-release'
        type: boolean
        default: false

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate version
        run: |
          if [[ ! "${{ github.event.inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9.-]+)?$ ]]; then
            echo "Invalid version format"
            exit 1
          fi
          if git rev-parse "v${{ github.event.inputs.version }}" >/dev/null 2>&1; then
            echo "Tag already exists"
            exit 1
          fi

      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - run: npm ci
      - run: npm test

      - name: Update version and create tag
        run: |
          # Update version only if it's different from current
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          if [ "$CURRENT_VERSION" != "${{ github.event.inputs.version }}" ]; then
            npm version ${{ github.event.inputs.version }} --no-git-tag-version
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add package.json package-lock.json
            git commit -m "chore: bump version to ${{ github.event.inputs.version }}"
            git push origin main
          else
            echo "Version already set to ${{ github.event.inputs.version }}"
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
          fi
          
          git tag "v${{ github.event.inputs.version }}"
          git push origin "v${{ github.event.inputs.version }}"

      - name: Generate release notes
        id: notes
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          if [ -n "$LAST_TAG" ]; then
            echo "## Changes since $LAST_TAG" > notes.md
            git log $LAST_TAG..HEAD --pretty=format:"- %s" >> notes.md
          else
            echo "## Initial Release" > notes.md
            echo "High-performance text similarity algorithms for Node.js" >> notes.md
          fi
          
          {
            echo 'notes<<EOF'
            cat notes.md
            echo 'EOF'
          } >> $GITHUB_OUTPUT

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: v${{ github.event.inputs.version }}
          body: ${{ steps.notes.outputs.notes }}
          prerelease: ${{ github.event.inputs.prerelease }}